---
import { type CollectionEntry, getCollection } from 'astro:content'

const apps = await getCollection('frameworks')
---

<ul>
	{apps.map(({ data: { name, offset, url, version } }: CollectionEntry<'frameworks'>) => (
		<li style={{
			'--_image': `url(/assets/${name.toLocaleLowerCase()}.svg)`,
			'--_offset': offset,
		}}>
			<a href={url}>
				<span data-item="component[name]">{name}</span>
				<span data-item="component[version]">v{version}</span>
			</a>
		</li>
	))}
</ul>

<style>
	ul {
		display: flex;
		flex-direction: column;
		flex-wrap: wrap;
		gap: 24px;
		justify-content: center;
		list-style: none;
		margin-block: 56px 64px;
		padding: 0;

		@media (width >= 460px) {
			flex-direction: row;
		}
	}

	li {
		max-inline-size: revert;
		min-inline-size: 200px;
		padding: 0;
	}

	a {
		align-content: center;
		align-items: center;
		background-color: var(--surface-1);
		border-radius: 8px;
		block-size: 80px;
		box-shadow: var(--shadow-6);
		color: var(--text-1);
		column-gap: 16px;
		display: grid;
		grid-template-columns: min-content 1fr;
		padding: 16px;
		position: relative;
		text-decoration: none;
		transition-duration: 0.3s;
		transition-property: background-color, box-shadow, outline;
		transition-timing-function: linear, linear, var(--ease-spring-1);
		z-index: 1;

		&:is(:focus-visible, :hover) {
			box-shadow: var(--shadow-4);

			&::after {
				scale: 1.25;
			}
		}

		ul:has(&:focus-visible, &:hover) a:not(:focus-visible, :hover) {
			background-color: var(--surface-2);

			&::before{
				filter: grayscale(50%) opacity(16%);
			}
		}

		&::after, &::before {
			background-image: var(--_image);
			background-repeat: no-repeat;
			content: '';
			display: block;
		}

		&::after {
			aspect-ratio: 1;
			background-position: center;
			block-size: 32px;
			grid-row: 1 / 3;
			transition-duration: 0.2s, 0.8s;
			transition-property: filter, scale;
			transition-timing-function: ease-out, var(--ease-spring-5);

			@container style(--theme: dark) {
				mix-blend-mode: screen;
			}
		}

		&::before {
			background-position: var(--_offset);
			background-size: 400%;
			border-radius: 8px;
			inset: 0;
			position: absolute;
			transition-delay: 0.1s;
			transition-duration: 0.2s;
			transition-property: filter;
			transition-timing-function: linear;
			z-index: -1;
		}
	}

	[data-item*="name"] {
		font-weight: var(--font-weight-6);
	}

	[data-item*="version"] {
		color: hsl(from var(--text-1) h s l / 70%);
		font-family: monospace;
		font-size: 0.8em;
		font-variant-numeric: tabular-nums;
	}

</style>
